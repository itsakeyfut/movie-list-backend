version: "3.9"

services:
  gin:
    build:
      context: .
      dockerfile: docker/go/Dockerfile
    container_name: gin
    restart: always
    ports:
      - "${APP_PORT}:8080"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    volumes:
      - ./:/app
      - ./logs:/app/logs
    working_dir: /app
    command: go run cmd/api/main.go
    networks:
      - app-network

  postgres:
    image: ${DB_IMAGE}
    container_name: pg
    build:
      context: .
      dockerfile: ./docker/postgresql/Dockerfile
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  swagger-ui:
    build:
      context: .
      dockerfile: ./docker/swagger/Dockerfile
    image: ${SWAGGER_IMAGE}
    container_name: swagger-ui
    environment:
      - SWAGGER_JSON=/swagger/swagger.json
      - BASE_URL=/swagger
    volumes:
      - ./docs:/swagger
    ports:
      - "${SWAGGER_URL}:8080"
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
